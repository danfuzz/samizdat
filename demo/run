#!/bin/bash
#
# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>


#
# General setup
#

# Set `progName` to the program name, `progDir` to its directory, and `baseDir`
# to `progDir`'s directory. Follows symlinks.
function init-prog {
    local newp prog="$0"

    while newp="$(readlink "${prog}")"; do
        [[ ${newp} =~ ^/ ]] && prog="${newp}" || prog="${prog%/*}/${newp}"
    done

    progName="${prog##*/}"
    progDir="$(cd "${prog%/*}"; /bin/pwd -P)"
    baseDir="$(cd "${progDir}/.."; /bin/pwd -P)"
}

init-prog


#
# Argument parsing
#

# Extra options to pass to `samex`.
samexOpts=()

while [[ $1 != '' ]]; do
    opt="$1"
    if [[ ${opt} == '--' ]]; then
        shift
        break
    elif [[ ${opt} == '--help' ]]; then
        echo "${progName} [--runtime=<name>] [--suffix=<suffix>]"
        echo '    [--build] [--optimize] [--time | --profile]'
        echo '    demo-name arg...'
        exit
    elif [[ ${opt} == '--build' || ${opt} == '--optimize'
        || ${opt} == '--profile' || ${opt} == '--time'
        || ${opt} =~ ^--runtime= || ${opt} =~ ^--suffix= ]]; then
        samexOpts+=("${opt}")
    elif [[ ${opt} =~ ^- ]]; then
        echo "Unknown option: ${opt}" 1>&2
        exit 1
    else
        break
    fi
    shift
done
unset opt

name="$1"
shift

if [[ ${name} == '' ]]; then
    echo 'Missing demo name.' 1>&2
fi


#
# Main script
#

# Find the demo directory, expanding from the given name if necessary.

if [[ ! ${name} =~ ^/ ]]; then
    names=($(find "${progDir}" -type d -name "${name}*"))
    case "${#names[@]}" in
        (0) echo "Not found: ${name}" 1>&2 ;;
        (1) : ;;
        (*) echo "Multiple matches: ${name}" 1>&2 ;;
    esac
    name="${names[0]}"
fi

# Ensure it's a readable directory .

if [[ ! (-r ${name} && -d ${name}) ]]; then
    echo "Not a readable directory: ${name}" 1>&2
    exit 1
fi

# Find the "main" and/or "module" file.

moduleFile="$(cd "${name}"; find . -maxdepth 1 -name 'module.sam')"
if [[ ${moduleFile} != '' ]]; then
    # If there's a module file, the path to pass is the directory.
    mainFile="."
else
    mainFile="$(cd "${name}"; find . -maxdepth 1 -name 'main.sam*')"
    if [[ ${mainFile} == '' ]]; then
        echo "No main or module file in directory: ${name}" 1>&2
        exit 1
    fi
fi

# Build `samex` (helper / wrapper scripts) if necessary.

cmdName="${baseDir}/out/final/bin/samex"

if [[ ! -x "${cmdName}" ]]; then
    "${baseDir}/blur/blur" --in-dir="${baseDir}/samex" || exit 1
fi

# Start the runtime, cd'ed to the demo dir, passing it the main script
# name and any other arguments passed to this script.

cmd=("${cmdName}" "${samexOpts[@]}" "${mainFile}" "$@")

echo "Running demo: $(basename "${name}")"
cd "${name}"
echo '$' "${cmd[@]}"
echo ''
exec "${cmd[@]}"
