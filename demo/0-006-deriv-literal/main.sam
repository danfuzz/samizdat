## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Derived value literal demo
##

#= language core.Lang0


##
## Helper Definitions
##

fn msg(string) {
    note(cat("Got: ", $Format::source(string)))
};


##
## Main Tests
##

## These all refer to the same value.
msg(@(@@("Null")));
msg(@(@@"Null"));
msg(@"Null");
msg(@Null);
msg(null);

## This is not the same as the above, as the type name is `null`, not `"Null"`.
msg(@(@@(null)));

## These all refer to the same value.
msg(@potion("blort"));
msg(@"potion"("blort"));
msg(@(@@potion)("blort"));

msg(false);
msg(true);

msg(@blort);
msg(@"%fizmo%");
msg(@(@@(123)));
msg(@(@@([123])));

msg(@"^zorch^"("scorch"));
msg(@fizmo([1, 2, 3]));
msg(@fizmo[1, 2, 3]);
msg(@fizmo({a: 1, b: 2, c: 3}));
msg(@fizmo{a: 1, b: 2, c: 3});
msg(@(@@(123))(456));

## Keywords can be used as types.
msg(@def);
msg(@fn(100));

## Expressions can be used as names.
msg(@(@@(cat("blo", "rt"))));

## Accessing data via `get` calls, explicitly and implicitly.
msg(get(@foo("abc"), 0));
msg(get(@foo["zero", "one"], 1));
msg(get(@foo{a: 1, b: 2}, "a"));
msg(@foo{a: 1, b: 2}::b);
