## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Variable declaration and binding demo
##

#= language core.Lang0


##
## Private Definitions
##

## Demo of immutable variable declaration and binding.
fn frotz(foo) {
    def ignatz;

    note("frotz:");
    ignatz := cat("    ", foo);
    note(ignatz)
};

## Demo of same-scope mutable variable declaration and binding.
fn zorch(foo) {
    var ignatz;
    var fizmo = foo;

    note("zorch:");
    ignatz := cat("    ", fizmo);
    note(ignatz);
    ignatz := cat(ignatz, " and ");
    fizmo := cat(ignatz, "trolb");
    note(fizmo)
};

## Demo of different-scope mutable variable declaration and binding.
fn igram(foo) {
    var fizmo = foo;

    note("igram:");

    ifIs { eq(fizmo, "fizmo") }
        { fizmo := "Yes, fizmo." };

    note("    ", fizmo);
    fizmo := foo;

    ifIs { eq(fizmo, "fizmo") }
        {
            ifIs { eq(fizmo, "fizmo") }
                { fizmo := "Yes yes, fizmo." }
        };

    note("    ", fizmo);
};

## Demo of box-of-variable access.
fn fizmo() {
    var x = "blort";
    def box = var x;

    note("fizmo:");
    note("    ", x);
    note("    ", box.fetch());

    box* := "igram";
    note("    ", x);
};


##
## Main Tests
##

## Check a few cases of identifier syntax.
def _ = 1;
def $ = 1;
def x = 1;
def _x = 1;
def $x = 1;
def x_ = 1;
def x$ = 1;

frotz("fizmo");
zorch("blort");
igram("fizmo");
fizmo();
