## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `if*` function demo
##

#= language core.Lang0


##
## Main demos
##

def maybe1 = maybeValue { -> };
note($Format::source(maybe1));

def maybe2 = maybeValue { <> "Yes: opt" };
note($Format::source(maybe2));

def v1 = ifValue { "Yes." }
    { value ->
        note(value);
        <> "Yes: v1"
    };
note(v1);

def v2 = ifValue { "Yes." }
    { value ->
        note(value);
        <> "Yes: v2"
    }
    { die("No.") };
note(v2);

def v3 = ifValue { -> }
    { value -> die("No.") }
    {
        note("Yes.");
        <> "Yes: v3"
    };
note(v3);

def v4 = maybeValue { <> ifValue { -> } { value -> die("No."); } };
note($Format::source(v4));

def v5 = ifIs { "Yes." }
    { <> "Yes: v5" };
note(v5);

def v6 = ifIs { "Yes." }
    { <> "Yes: v6" }
    { die("No.") };
note(v6);

def v7 = ifIs { }
    { die("No.") }
    { <> "Yes: v7" };
note(v7);

def v8 = maybeValue { <> ifIs { } { die("No.") } };
note($Format::source(v8));

def v9 = maybeValue { <> ifNot { <> "Yes." } { die("No.") } };
note($Format::source(v9));

def v10 = ifNot { -> }
    { <> "Yes: v10" };
note(v10);

def v11 = ifValueOr
    { <> "Yes: v11" }
    { die("No.") };
note(v11);

def v12 = ifValueOr
    { -> }
    { <> "Yes: v12" };
note(v12);

## Admittedly odd edge case.
def v13 = ifValues([],
    { <> "Yes: v13" },
    { die("No.") });
note(v13);

## Admittedly odd edge case.
def v14 = ifValues([],
    { <> "Yes: v14" });
note(v14);

def v15 = ifValues(
    [
        { <> "Yes: v15" }
    ],
    { args* <> $Format::source(args) });
note(v15);

def v16 = ifValues(
    [
        { <> "Yes: v16" }
    ],
    { args* <> $Format::source(args) },
    { die("No.") });
note(v16);

def v17 = ifValues(
    [
        { -> }
    ],
    { x -> die("No.") },
    { <> "Yes: v17" });
note(v17);

def v18 = maybeValue { <> ifValues([ { -> } ], { x -> die("No.") }) };
note($Format::source(v18));

def v19 = ifValues(
    [
        { <> "1" },
        { x <> cat(x, "2") }
    ],
    { args* <> $Format::source(args) },
    { die("No.") });
note(v19);

def v20 = ifValues(
    [
        { <> "1" },
        { x <> }
    ],
    { die("No.") },
    { <> "Yes: v20" });
note(v20);

def v21 = ifValues(
    [
        { <> "1" },
        { x <> cat(x, "2") },
        { x, y <> cat(x, y, "3") },
        { x, y, z <> cat(x, y, z, "4") }
    ],
    { args* <> $Format::source(args) },
    { die("No.") });
note(v21);
