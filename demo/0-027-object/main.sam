## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Object class demo
##

#= language core.Lang0


##
## Private Definitions
##

## Prints the value.
fn msg(label, value) {
    note(label, ": ", $Format::source(value));
};


##
## Main demos
##

def blortSecret = "blort";
def Blort = makeObjectClass(@Blort, blortSecret);
fn Blort.whatIs() {
    note("I am a Blort.");
};

msg("Blort class", Blort);
msg("Parent", classParent(Blort));

def AnotherBlort = makeObjectClass(@Blort, blortSecret);
ifIs { eq(Blort, AnotherBlort) }
    { die("Should be different classes!") };

def fizmoSecret = "fizmo";
def Fizmo = makeObjectClass(@Fizmo, fizmoSecret);
fn Fizmo.whatIs() {
    note("I am a Fizmo.");
};

msg("Fizmo class", Fizmo);
msg("Parent", classParent(Fizmo));

def blortNoData = makeObject(Blort, blortSecret);
def blortWithData = makeObject(Blort, blortSecret, {x: 10});
msg("Blort #1", blortNoData);
blortNoData.whatIs();
msg("Blort #2", blortWithData);
blortWithData.whatIs();
msg("Blort data", blortWithData.objectDataOf(blortSecret));

def fizmoNoData = makeObject(Fizmo, fizmoSecret);
def fizmoWithData = makeObject(Fizmo, fizmoSecret, {x: 10, y: 20});
msg("Fizmo #1", fizmoNoData);
fizmoNoData.whatIs();
msg("Fizmo #2", fizmoWithData);
fizmoWithData.whatIs();
msg("Fizmo data", fizmoWithData.objectDataOf(fizmoSecret));
