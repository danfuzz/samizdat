# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Binary operator demo, for the core message-based operators
#


# This declares the arguments to the program itself.
SELF_PATH, ARGS* ::


#
# Helper Definitions
#

# Prints out the given value.
fn msg(value) {
    io0Note(sourceString(value))
};


#
# Main Tests
#

# Ordering. The ones expected to be "falsey" are surrounded by `??` to
# make them easily printable.

io0Note("\nOrder 1");
msg(1 == 1);
msg(1 != 2);
msg(1 < 3);
msg(5 > 4);
msg(1 <= 5);
msg(6 >= 6);

msg("a" == "a");
msg("a" != "b");
msg("a" < "c");

msg([] == []);
msg([] < [1]);

msg([:] == [:]);
msg([:] < [a: 10]);

io0Note("\nOrder 2");
msg((1 != 1)??);
msg((1 == 2)??);
msg((1 >= 2)??);
msg((2 <= 1)??);
msg((1 > 2)??);
msg((2 < 2)??);
msg(([1] > [1])??);
msg(([1] <= [0])??);
msg(([1] >= [2])??);

io0Note("\nOrder 3");
msg(1 < 2 < 20);
msg(100 == 100 > 21);
msg(10 >= 5 < 22);
msg(2 != 3 != 23);

msg((1 != 1 < 2)??);
msg((2 > 3 == 3)??);
msg((4 < 5 == 6)??);
msg((9 < 10 < 11 < 12 != 12)??);

io0Note("\nIndex");

msg(["blort", "fizmo", "igram"][0]);
msg(["blort", "fizmo", "igram"][1]);
msg(["blort", "fizmo", "igram"][3]?);
msg(["blort", "fizmo", "igram"][-10]?);
msg(["blort", "fizmo", "igram"]["x"]?);

msg([c: "cuttlefish", n: "nutria"]["c"]);
msg([c: "cuttlefish", n: "nutria"]["n"]);
msg([c: "cuttlefish", n: "nutria"][0]?);

msg("frotz"[0]);
msg("frotz"[4]);
msg("frotz"[5]?);
msg("frotz"[-1]?);
msg("frotz"["ztrof"]?);

<> 0
