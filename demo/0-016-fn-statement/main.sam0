## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Function statement demo
##


##
## Helper Definitions
##

fn print(args*) {
    note($Format::sourceUnadorned(args))
};


##
## Main Tests
##

fn func1(x) {
    print("func1", x);
    return "func1"
};

note(func1(10));

fn <out> func2(x*) {
    print("func2", x);
    <out> "func2"
};

note(func2(20, "twenty"));

## Self-recursion.
fn func3(x) {
    print("func3", x);
    ifIs { <> lt(x, 5) }
        {
            func3($Number::add(x, 1));
            return "func3"
        }
};

note(func3(1));

## Mutual recursion.
fn recFunc1(x) {
    print("recFunc1", x);
    ifIs { <> lt(x, 5) }
        { recFunc2($Number::add(x, 1)) };

    return "recFunc1"
};

fn recFunc2(x) {
    print("recFunc2", x);
    ifIs { <> lt(x, 5) }
        { recFunc1($Number::add(x, 1)) };
};

note(recFunc1(1));

<> 0
