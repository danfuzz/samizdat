# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Method call demo
#

def Box = moduleUse({name: ["core", "Box"]});
def Io1 = moduleUse({name: ["core", "Io1"]});


#
# Helper Definitions
#

# Prints out the given value.
fn msg(value) {
    Io1::note("\%q(value)");
};


#
# Main Tests
#

def sizeOf = Collection::sizeOf;
def nth = Collection::nth;

Io1::note("\nMethod call syntax");
msg([1, 2].sizeOf());
msg(["zero", "one", "two"].get(0));
msg(["zero", "one", "two"].nth(1));
msg((100).perEq(100));
msg("".cat("Awesome", "tastic!"));

Io1::note("\nGetter syntax");
def \"get-size" = Collection::sizeOf;
msg([1, 2, 3].size);

def \"get-value" = Box::fetch;
def cell = Box::makeCell(100);
msg(cell.value);

Io1::note("\nSetter syntax");
def \"set-value" = Box::store;
msg(cell.value = 987);
cell.value = 654;
msg(cell.value);

<> 0
