## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Generic function demo
##

def whatIs = makeRegularGeneric("whatIs", 1, 1);

genericBind(whatIs, Int,    { . -> note("I am an int.") });
genericBind(whatIs, String, { . -> note("I am a string.") });
genericBind(whatIs, Value,  { . -> note("I am unknown.") });

def whatAre = makeUnitypeGeneric("whatAre", 2);

genericBind(whatAre, List,  { .* -> note("We are lists.") });
genericBind(whatAre, Map,   { .* -> note("We are maps.") });
genericBind(whatAre, Value, { .* -> note("We are unknown.") });

whatIs(10);
whatIs("stuff");
whatIs([]);

whatAre([1], [2]);
whatAre({a: 10}, {b: 20}, {});
whatAre(9, 8, 7, 6, 5, 4);


<> 0
