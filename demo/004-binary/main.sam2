# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Binary operator demo. Also demos hex and binary numbers, and "digit spaces".
#


# This declares the arguments to the program itself.
SELF_PATH ARGS* ::


#
# Helper definitions
#

# Prints out the given value.
out = { value ::
    io0Note(format("%q", value))
};

# Prints out the given value in hex.
outHex = { value ::
    io0Note(format("%x", value))
};


#
# Main tests
#

# Different bases, and digit spaces.
out(1);
out(1_234);
out(0x1004);
out(0b1111_1010);

# Operators.
out(1 + 2);
out(2 - 1);
out(3 * 4);
out(6 / 3);
out(5 % 2);
out(1 + 2 * 3);
out((1 + 2) * 3);
out(2 * 3 * 4 + 5);

outHex(0xfff0 .and. 0x0fff);
outHex(0xfff0 .eqv. 0x0fff .and. 0xffffff);
outHex(0xfff0 .nand. 0x0fff .and. 0xffffff);
outHex(0xfff0 .nor. 0x0fff .and. 0xffffff);
outHex(0xfff0 .or. 0x0fff);
outHex(0xfff0 .xor. 0x0fff);
outHex(0x00ff .shl. 0x8);
outHex(0xff00 .shr. 0x8);

out(1 == 1);
out(1 != 2);
out(1 < 2);
out(2 > 1);
out(1 <= 2);
out(2 >= 2);

out(1 != 1);
out(1 == 2);
out(1 >= 2);
out(2 <= 1);
out(1 > 2);
out(2 < 2);

out(1 < 2 < 3);
out(1 == 1 > 0);
out(10 >= 5 < 9);
out(2 != 3 != 4);

out(1 != 1 < 2);
out(2 > 3 == 3);
out(4 < 5 == 6);
out(9 < 10 < 11 < 12 != 12);

<> 0
