# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Loop expression demo
#


# This declares the arguments to the program itself.
SELF_PATH, ARGS* ->

def Box = moduleGet({name: ["core", "Box"]});
def Io1 = moduleGet({name: ["core", "Io1"]});


#
# Main Tests
#

def box = Box::makeMutableBox(0);

do {
    store(box, Box::fetch(box) + 1);
    if (Box::fetch(box) == 5) {
        break
    };
    Io1::note("Value is \%q(Box::fetch(box)).")
};

do { <next> ->
    store(box, Box::fetch(box) + 1);
    if (Box::fetch(box) == 10) {
        continue
    } else if (Box::fetch(box) == 12) {
        <next>
    } else if (Box::fetch(box) == 15) {
        break
    };
    Io1::note("Value is \%q(Box::fetch(box)).")
};

def result = do <out> {
    store(box, Box::fetch(box) + 1);
    if (Box::fetch(box) == 20) {
        <out> "igram"
    };
    Io1::note("Value is \%q(Box::fetch(box)).")
};

Io1::note("Result is \%q(result).");

<> 0
