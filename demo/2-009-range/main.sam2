# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Range demo, with layer 2 syntax
#


# This declares the arguments to the program itself.
SELF_PATH, ARGS* ::


#
# Helper Definitions
#

# Prints out the values yielded by the given generator.
fn msg(generator) {
    io0Note("Got: \%q([generator*])")
};

# Prints out 10 values yielded by the given generator (and no more).
fn msgTen(generator) {
    def values = filterGenerator(generator, 1..10) { v, . <> v };
    io0Note("Got: \%q([values*])")
};


#
# Main Tests
#

io0Note("Inclusive, default increment...");
msg(100..110);
msg("U".."Z");
msg(9..9);
msg(9..0);
msg("f".."f");
msg("f".."a");

io0Note("\nInclusive, explicit increment...");
msg(0..200..1000);
msg("a"..5.."z");
msg(10..-1..1);
msg("F"..-2.."A");
msg(9..0..9);

io0Note("\nExclusive, default increment...");
msg(100..!110);
msg("U"..!"Z");
msg(9..!9);
msg(9..!0);
msg("f"..!"f");
msg("f"..!"a");

io0Note("\nExclusive, explicit increment...");
msg(0..200..!1000);
msg("a"..5..!"z");
msg(10..-1..!1);
msg("F"..-2..!"A");
msg(9..0..!9);

io0Note("\nOpen, default increment...");
msgTen(-10..+);
msgTen("M"..+);

io0Note("\nOpen, explicit increment...");
msgTen(99..-1..+);
msgTen("z"..-2..+);

<> 0
