## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Box demo
##

#= language core.Lang0

import core.Box;


##
## Private Definitions
##

## Prints box info.
fn msg(box) {
    def str = ifValue { fetch(box) }
        { value -> $Format::source(value) }
        { "(void)" };

    note("Fetched: ", str)
};

## Prints box info using interpolation.
fn msgInterp(box) {
    def str = ifValue { box* }
        { value -> $Format::source(value) }
        { "(void)" };

    note("Interpolated: ", str)
};


##
## Main demos
##

note("Mutable Box");

def box1 = $Box::makeCell();
msg(box1);
store(box1);
msg(box1);
store(box1, "Hi");
msg(box1);
store(box1, "there!");
msg(box1);
store(box1);
msg(box1);

note("\nMutable Box, pre-set");

def box2 = $Box::makeCell("blort");
msg(box2);
store(box2);
msg(box2);
store(box2, "igram");
msg(box2);

note("\nYield Box");

def box3 = $Box::makePromise();
msg(box3);
store(box3, "fizmo");
msg(box3);

note("\nResult Box, void");

def box4 = $Box::makeResult();
msg(box4);

note("\nResult Box, value");

def box5 = $Box::makeResult("blort");
msg(box5);

note("\nnullBox");

msg(nullBox);
store(nullBox, "stuff");
msg(nullBox);

note("\nInterpolation");

msgInterp(nullBox);
msgInterp($Box::makeCell());
msgInterp($Box::makeCell("blort"));
