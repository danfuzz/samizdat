# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Throwaway demo of module mechanism
#

#
# Main Tests
#

# A known module (shouldn't cause any trouble).
def Io1 = moduleUse({name: ["core", "Io1"]});

# A locally-defined module.
def Stuff = moduleUse({name: ["app", "Stuff"]});

# Ensure it's not re-evaluated.
def Stuff2 = moduleUse({name: ["app", "Stuff"]});
ifIs { <> ne(Stuff, Stuff2) }
    { Io1::die("Different modules!") };

fn main(.*) {
    Io1::note(Format::source(Stuff::STUFF));
    Io1::note(Format::source(Stuff::SUBSTUFF));
};

<> {main: main}
