## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Throwaway demo of module mechanism
##

#= language core.Lang1


##
## Main Tests
##

## A known module (shouldn't cause any trouble).
moduleLoad("core.Format");

## A locally-defined module.
def $Stuff = moduleLoad("app.Stuff");

## Ensure it's not re-evaluated.
def $Stuff2 = moduleLoad("app.Stuff");
ifIs { <> ne($Stuff, $Stuff2) }
    { die("Different modules!") };

## A resource file.
def $resource = intraRead("resource.txt", "utf8");

export fn main(selfPath, .*) {
    note(cat("I am: ", $Format::source(selfPath)));
    note($Format::source($Stuff::STUFF));
    note($Format::source($Stuff::SUBSTUFF));
    note($Format::source($Stuff::stuffFunc()));
    note($Format::source($resource));
};
