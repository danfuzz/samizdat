# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Generic function demo
#


# This declares the arguments to the program itself.
SELF_PATH, ARGS* ::

def whatIs = makeRegularGeneric("whatIs", 1, 1);

genericBind(whatIs, Int,    { . :: io0Note("I am an int.") });
genericBind(whatIs, String, { . :: io0Note("I am a string.") });
genericBind(whatIs, Value,  { . :: io0Note("I am unknown.") });

def whatAre = makeUnitypeGeneric("whatAre", 2);

genericBind(whatAre, List,  { .* :: io0Note("We are lists.") });
genericBind(whatAre, Map,   { .* :: io0Note("We are maps.") });
genericBind(whatAre, Value, { .* :: io0Note("We are unknown.") });

whatIs(10);
whatIs("stuff");
whatIs([]);

whatAre([1], [2]);
whatAre([a: 10], [b: 20], [:]);
whatAre(9, 8, 7, 6, 5, 4);


<> 0
