## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Class definition syntax demo
##

#= language core.Lang0


##
## Private Definitions
##

fn print(args*) {
    note($Format::sourceUnadorned(args))
};


##
## Main Tests
##

def secret = @secret.toUnlisted();

## Simplest possible class.

note("Blort (the first)");

class Blort {
    ## This space intentionally left blank.
};

print(Blort);

## Another class with the same name.

note("\nBlort (the second)");

def OtherBlort = {
    class Blort { };
    Blort
}();

print(OtherBlort);
ifIs { eq(Blort, OtherBlort) }
    { die("Should be different classes!") };


## Class with secret and no methods.

note("\nFizmo");

class Fizmo
        access: secret {
    ## This space intentionally left blank.
};

print(Fizmo);
def fizmo = makeObject(Fizmo, secret);
print(fizmo);
print(secret(fizmo));

## Class with secret and just one method.

note("\nIgram");

class Igram
        access: secret {
    fn hello() {
        note("Igram! ", secret(this)::effect)
    }
};

print(Igram);
def igram = makeObject(Igram, secret, @{effect: "purple -> invisible"});
print(igram);
print(secret(igram));
igram.hello();
