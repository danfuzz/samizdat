# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Samizdat Layer 1
#
# This is a Samizdat Layer 0 program which runs Samizdat Layer 0
# programs.
#


# This declares the arguments to the program itself.
SELF_PATH ARGS* ::


#
# Helper functions
#

# Standard output, as a path-listlet.
stdout = @[@"dev" @"stdout"];

# Reads a sibling file.
readFile = io0SandboxedReader
    (listletDelNth SELF_PATH (isub (lowSize SELF_PATH) @1));

# Loads a sibling file.
loadFile = { name ::
    text = readFile @[(stringletAdd name @".sam0")];
    tree = sam0Tree text;
    function = sam0Eval (sam0Library()) tree;

    <> function()
};

# Tokenizer function.
tokenize = loadFile @"tokenize";


# Parses a listlet of tokens as a program, using Samizdat Layer 0 tree
# syntax. Returns a `function` node.
parse = { tokens ::
    # TODO

    theCall = [:
        @call
        @[
            @function=[:@varRef @io0WriteFileUtf8:]
            @actuals=@[
                [:@literal @[@"dev" @"stdout"]:]
                [:@literal @"We have received the Самиздат!\n":]
            ]
        ]
    :];

    <> [:
        @function
        @[
            @formals=[:@formals @[]:]
            @statements=@[theCall]
        ]
    :]
};


#
# Main function
#

# Compiles the file named in the first argument in a fresh context,
# and runs its `main`, passing it an array of the rest of the
# arguments.
main = { file rest* ::
    programText = io0ReadFileUtf8 (io0PathFromStringlet file);
    tokens = tokenize programText;

    io0WriteFileUtf8 stdout (sourceStringlet tokens);
    io0WriteFileUtf8 stdout @"\n\n";

    programNode = parse tokens;
    function = sam0Eval (sam0Library()) programNode;
    <> apply function rest
};

<> apply main ARGS
