# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. See the associated file "LICENSE.md" for details.

#
# Samizdat Layer 1
#
# This is a Samizdat Layer 0 program which runs Samizdat Layer 0
# programs.
#


# This declares the arguments to the program itself.
ARGS* ::


#
# Helper functions
#

# TODO: Stuff.


#
# Meat of the implementation
#

# Tokenizes the given string, using Samizdat Layer 0 token syntax.
# Returns a listlet of tokens.
tokenize = { programText ::
    # TODO
    <> @[]
};

# Parses a listlet of tokens as a program, using Samizdat Layer 0 tree
# syntax. Returns a `function` node.
parse = { tokens ::
    # TODO

    theCall = [:
        @call
        @[
            @function=[:@varRef @writeFile:]
            @actuals=@[
                [:@literal @"/dev/stdout":]
                [:@literal @"We have received the Самиздат!\n":]
            ]
        ]
    :];

    <> [:
        @function
        @[
            @formals=[:@formals @[]:]
            @statements=@[theCall]
        ]
    :]
};


#
# Main function
#

# Compiles the file named in the first argument in a fresh context,
# and runs its `main`, passing it an array of the rest of the
# arguments.
main = { file rest* ::
    programText = readFile file;

    tokens = tokenize programText;
    <> if { <> ne tokens null } {
        programNode = parse tokens;
        if { <> ne programNode null } {
            function = sam0Eval (sam0Library()) programNode;
            <> apply function rest
        } else {
            <> @1
        }
    } else {
        <> @1
    }
};

<> apply main ARGS
