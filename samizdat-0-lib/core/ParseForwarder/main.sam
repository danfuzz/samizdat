# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `ParseForwarder` type
#
# Data payload is a yield box.
#

def Box = moduleUse({name: ["core", "Box"]});
def Io0 = moduleUse({name: ["core", "Io0"]});
def Peg = moduleUse({name: ["core", "Peg"]});


#
# Exported Definitions
#

# Documented in Samizdat Layer 0 spec.
fn make() {
    <> @[ParseForwarder: Box::makeYieldBox()]
};

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_canStore(fwd) {
    <> Box::canStore(dataOf(fwd))
};
genericBind(Box::canStore, "ParseForwarder", ParseForwarder_canStore);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_fetch(fwd) {
    <> Box::fetch(dataOf(fwd))
};
genericBind(Box::fetch, "ParseForwarder", ParseForwarder_fetch);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_store(fwd, parser) {
    ifNot { <> canCall(Peg::parse, parser) }
        { Io0::die("Attempt to forward to non-parser.") };

    <> Box::store(dataOf(fwd), parser);
};
genericBind(Box::store, "ParseForwarder", ParseForwarder_store);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_parse(fwd, args*) {
    <> Peg::parse(Box::fetch(dataOf(fwd)), args*)
};
genericBind(Peg::parse, "ParseForwarder", ParseForwarder_parse);

<> {
    make: make
}
