# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `ValueGenerator` Type
#

def Box = moduleGet({name: ["core", "Box"]});
def Io0 = moduleGet({name: ["core", "Io0"]});

#
# Exported Definitions
#

# Documented in spec.
fn ValueGenerator_collect(gen) {
    Io0::die("Unbounded generator.");
};
genericBind(collect, "ValueGenerator", ValueGenerator_collect);

# Documented in spec.
fn ValueGenerator_nextValue(gen, box) {
    Box::store(box, dataOf(gen));
    <> gen
};
genericBind(nextValue, "ValueGenerator", ValueGenerator_nextValue);

# Documented in spec.
fn makeValueGenerator(value) {
    <> @[ValueGenerator: value]
};

<> {
    makeValueGenerator: makeValueGenerator
}
