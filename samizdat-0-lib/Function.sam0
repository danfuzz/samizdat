# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `Function` functions
#


#
# Exported Definitions
#

# Documented in Samizdat Layer 0 spec.
fn forwardFunction() {
    def box = makeYieldBox();

    fn doForward(optFunction?, args*) {
        ifIs { <> eq(optFunction, []) }
            { io0Die("Attempt to forward to void.") };
        ifIs { <> ne(args, []) }
            { io0Die("Attempt to forward too many arguments.") };

        def function = optFunction*;

        ifNot { <> canCall(call, function) }
            { io0Die("Attempt to forward to non-function.") };

        store(box, function);
        <> function
    };

    fn forwarder(args*) {
        <> ifValue { <> fetch(box) }
            { function <> function(args*) }
            { <> doForward(args*) }
    };

    <> forwarder
};

<> [
    forwardFunction: forwardFunction
]
