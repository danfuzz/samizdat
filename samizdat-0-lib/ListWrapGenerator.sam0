# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `ListWrapGenerator` Type
#
# Payload is `subGen`, the sub-generator.

def Box = moduleGet({name: ["core", "Box"]});


#
# Exported Definitions
#

# Documented in spec.
fn makeListWrapGenerator(generator) {
    <> @[ListWrapGenerator: generator]
};

# Documented in spec.
fn ListWrapGenerator_nextValue(gen, box) {
    def innerBox = Box::makeYieldBox();

    <> ifValue { <> nextValue(dataOf(gen), innerBox) }
        { nextGenerator ->
            store(box, [Box::fetch(innerBox)]);
            <> @[ListWrapGenerator: nextGenerator]
        }
        {
            # It became voided.
            store(box);
        }
};
genericBind(nextValue, "ListWrapGenerator", ListWrapGenerator_nextValue);

<> {
    makeListWrapGenerator: makeListWrapGenerator
}
