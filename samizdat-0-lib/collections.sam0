# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Collection library functions: string, list, and map
#
# These are all grouped together because the functionality implemented
# for each is similar to the others.
#


#
# List
#

# Documented in Samizdat Layer 0 spec.
fn listButFirst(list, notFound?) {
    <> ifIs { <> eq(list, []) }
        { <> notFound* }
        { <> listSlice(list, 1) }
};

# Documented in Samizdat Layer 0 spec.
fn listButLast(list, notFound?) {
    <> ifIs { <> eq(list, []) }
        { <> notFound* }
        { <> listSlice(list, 0, isub(lowSize(list), 1)) }
};

# Documented in Samizdat Layer 0 spec.
fn listFirst(list, notFound?) {
    <> listNth(list, 0, notFound*)
};

# Documented in Samizdat Layer 0 spec.
fn listLast(list, notFound?) {
    <> listNth(list, isub(lowSize(list), 1), notFound*)
};


#
# String
#

# Documented in Samizdat Layer 0 spec.
fn stringFromTokenList(tokens) {
    <> listReduce("", tokens)
        { result, ., token :: <> stringAdd(result, tokenType(token)) };
};


#
# Exports
#

<> [
    listButFirst: listButFirst,
    listButLast: listButLast,
    listFirst: listFirst,
    listLast: listLast,
    stringFromTokenList: stringFromTokenList
]
