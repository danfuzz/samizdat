# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `ForwardFunction` type
#
# Data payload is a yield box.
#

#
# Exported Definitions
#

# Documented in Samizdat Layer 0 spec.
fn makeFunctionForwarder() {
    <> @[ForwardFunction: makeYieldBox()]
};

# Documented in Samizdat Layer 0 spec.
fn ForwardFunction_canStore(fwd) {
    <> canStore(dataOf(fwd))
};
genericBind(canStore, "ForwardFunction", ForwardFunction_canStore);

# Documented in Samizdat Layer 0 spec.
fn ForwardFunction_fetch(fwd) {
    <> fetch(dataOf(fwd))
};
genericBind(fetch, "ForwardFunction", ForwardFunction_fetch);

# Documented in Samizdat Layer 0 spec.
fn ForwardFunction_store(fwd, function) {
    ifNot { <> canCall(call, function) }
        { io0Die("Attempt to forward to non-function.") };

    <> store(dataOf(fwd), function);
};
genericBind(store, "ForwardFunction", ForwardFunction_store);

# Documented in Samizdat Layer 0 spec.
fn ForwardFunction_call(fwd, args*) {
    <> call(fetch(dataOf(fwd)), args*)
};
genericBind(call, "ForwardFunction", ForwardFunction_call);

# Documented in Samizdat Layer 0 spec.
fn ForwardFunction_canCall(fwd, arg) {
    <> canCall(fetch(dataOf(fwd)), arg)
};
genericBind(canCall, "ForwardFunction", ForwardFunction_canCall);

<> [
    makeFunctionForwarder: makeFunctionForwarder
]
