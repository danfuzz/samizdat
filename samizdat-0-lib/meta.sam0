# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Meta functions
#

#
# Helper definitions
#

# Map from file name suffixes to names of parsing and evaluation functions.
def META_NAME_MAP = [
    sam0: [eval: "sam0Eval", tokenize: "sam0Tokenize", tree: "sam0Tree"],
    sam1: [eval: "sam1Eval", tokenize: "sam1Tokenize", tree: "sam1Tree"],
    sam2: [eval: "sam2Eval", tokenize: "sam2Tokenize", tree: "sam2Tree"]
];


#
# Exported functions
#

# Documented in Samizdat Layer 0 spec.
fn makeLibrary(context) {
    <> [context*, LIBRARY: context]
};

# Documented in Samizdat Layer 0 spec.
fn metaFunctions(context, fileName) {
    def dotAt = stringReduce(-1, fileName) { result, n, ch ::
        <> ifIs { <> eq(ch, ".") }
            { <> n }
    };

    def suffix = ifIs { <> eq(dotAt, -1) }
        { <> "" }
        { <> stringSlice(fileName, iadd(dotAt, 1)) };

    # Note: As the layers get added, the default here should change.
    def nameMap = ifValue { <> mapGet(META_NAME_MAP, suffix) }
        { map :: <> map }
        { <> mapGet(META_NAME_MAP, "sam1") };

    <> mapMap(nameMap) { ., v ::
        <> ifValue { <> mapGet(context, v) }
            { newValue :: <> newValue }
            {
                io0Die(
                    stringAdd("Missing implementation for meta-function: ", v))
            }
    }
};

<> [
    makeLibrary: makeLibrary,
    metaFunctions: metaFunctions
]
