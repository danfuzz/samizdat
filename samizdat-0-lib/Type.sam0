# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Types
#

#
# Private Definitions
#

# Performs a type check, for the given type name.
fn hasCoreType(value, type) {
    <> ifIs { <> eq(typeOf(value), type) }
        { <> value }
};


#
# Exported Definitions
#

# Documented in Samizdat Layer 0 spec.
fn isBox(value) {
    <> hasCoreType(value, Box)
};

# Documented in Samizdat Layer 0 spec.
fn isFunction(value) {
    <> hasCoreType(value, Function)
};

# Documented in Samizdat Layer 0 spec.
fn isGeneric(value) {
    <> hasCoreType(value, Generic)
};

# Documented in Samizdat Layer 0 spec.
fn isInt(value) {
    <> hasCoreType(value, Int)
};

# Documented in Samizdat Layer 0 spec.
fn isList(value) {
    <> hasCoreType(value, List)
};

# Documented in Samizdat Layer 0 spec.
fn isMap(value) {
    <> hasCoreType(value, Map)
};

# Documented in Samizdat Layer 0 spec.
fn isString(value) {
    <> hasCoreType(value, String)
};

# Documented in Samizdat Layer 0 spec.
fn isUniqlet(value) {
    <> hasCoreType(value, Uniqlet)
};

<> [
    isBox:      isBox,
    isFunction: isFunction,
    isGeneric:  isGeneric,
    isInt:      isInt,
    isList:     isList,
    isMap:      isMap,
    isString:   isString,
    isUniqlet:  isUniqlet
]
