# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# `ParseForwarder` type
#
# Data payload is a yield box.
#

#
# Exported Definitions
#

# TODO: Documented in Samizdat Layer 0 spec.
fn makeParseForwarder() {
    <> @[ParseForwarder: makeYieldBox()]
};

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_canStore(fwd) {
    <> canStore(dataOf(fwd))
};
genericBind(canStore, "ParseForwarder", ParseForwarder_canStore);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_fetch(fwd) {
    <> fetch(dataOf(fwd))
};
genericBind(fetch, "ParseForwarder", ParseForwarder_fetch);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_store(fwd, parser) {
    ifNot { <> canCall(parse, parser) }
        { io0Die("Attempt to forward to non-parser.") };

    <> store(dataOf(fwd), function);
};
genericBind(store, "ParseForwarder", ParseForwarder_store);

# Documented in Samizdat Layer 0 spec.
fn ParseForwarder_parse(fwd, args*) {
    <> parse(fetch(dataOf(fwd)), args*)
};
genericBind(call, "ParseForwarder", ParseForwarder_parse);

<> [
    makeParseForwarder: makeParseForwarder
]
