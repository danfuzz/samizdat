# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Text formatting functions
#

#
# Helper definitions
#

# Formats a string argument.
fn doPlainString(arg) {
    # The `stringAdd` call effectively asserts that the argument is a string.
    <> stringAdd(arg)
};

# Formats a hex int argument.
fn doHex(arg) {
    <> stringFromInt(arg, 16)
};

# Mapping from format escape characters to their respective handler functions.
def FORMATTERS = [
    q:   sourceString,
    Q:   sourceStringUnadorned,
    s:   doPlainString,
    x:   doHex
];


#
# Exported functions
#

# Documented in Samizdat Layer 0 spec.
fn format(formatString, rest*) {
    def args = mutableBox(rest);

    def parFormat = {/
        (
            "%"
            (
                "%" { <> "%" }
            |
                ch = ["qQsx"]
                {
                    def formatter = mapGet(FORMATTERS, tokenType(ch));
                    def curArgs = boxGet(args);
                    def arg = listFirst(curArgs);
                    boxSet(args, listButFirst(curArgs));
                    <> formatter(arg)
                }
            )
        |
            ch = .
            { <> tokenType(ch) }
        )*
    /};

    <> stringAdd(pegApply(parFormat, formatString)*)
};


#
# Export mechanics
#

<> [
    format: format
]
