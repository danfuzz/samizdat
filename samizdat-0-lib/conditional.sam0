# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Conditional functions
#

# Documented in Samizdat Layer 0 spec.
and = { <out> predicates* ::
    <> argsReduce(
        { result, predicate :: ifTrue(predicate) {} { <out> false } },
        true,
        predicates*)
};

# Documented in Samizdat Layer 0 spec.
ifFalse = { predicate, falseFunction, trueFunction? ::
    <> ifValue { <> listNth(trueFunction, 0) }
        { trueFunction :: <> ifTrue(predicate, trueFunction, falseFunction) }
        { <> ifTrue(predicate, {}, falseFunction) }
};

# Documented in Samizdat Layer 0 spec.
ifVoid = { predicate, voidFunction, valueFunction? ::
    <> ifValue { <> listNth(valueFunction, 0) }
        { valueFunction :: <> ifValue(predicate, valueFunction, voidFunction) }
        { <> ifValue(predicate, {}, voidFunction) }
};

# Documented in Samizdat Layer 0 spec.
or = { <out> predicates* ::
    <> argsReduce(
        { result, predicate :: ifTrue(predicate) { <out> true } },
        false,
        predicates*)
};

# Documented in Samizdat Layer 0 spec.
\"switch" = { value, cases, defaultFunction? ::
    <> ifValue { <> mapGet(cases, value) }
        { function :: <> function() }
        {
            <> ifValue { <> listNth(defaultFunction, 0) }
                { function :: <> function() }
        }
};

<> [
    and: and,
    ifFalse: ifFalse,
    ifVoid: ifVoid,
    or: or,
    "switch": \"switch"
]
