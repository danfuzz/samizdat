## Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `ValueGenerator` Type
##

def unboundedCollect = submoduleUse("unboundedCollect")::unboundedCollect;

def Generator = moduleUse({name: ["proto", "Generator"]});


##
## Exported Definitions
##

## Documented in spec.
genericBind(Generator::collect, "ValueGenerator", unboundedCollect);

## Documented in spec.
fn ValueGenerator_nextValue(gen, box) {
    Box::store(box, dataOf(gen));
    <> gen
};
genericBind(Generator::nextValue, "ValueGenerator", ValueGenerator_nextValue);

## Documented in spec.
fn makeValueGenerator(value) {
    <> @ValueGenerator(value)
};

<> {
    makeValueGenerator
}
