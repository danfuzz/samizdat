## Copyright 2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Exported definitions
##

## Global variable names.
def NAMES = [
    "cat",
    "catCollect",
    "get",
    "ifIs",
    "ifNot",
    "ifValue",
    "ifValueOr",
    "ifValues",
    "loop",
    "makeList",
    "makeValue",
    "makeValueMap",
    "nonlocalExit",
    "optValue",
    "totEq",
    "totNe"
];

## Module-scoped names.
def MOD_NAMES = [
    {mod: "Format",    name: "formatterFor"},
    {mod: "Format",    name: "usual"},
    {mod: "Generator", name: "filterAll"},
    {mod: "Generator", name: "filterPump"},
    {mod: "Generator", name: "makeRepeatGenerator"},
    {mod: "Generator", name: "makeFilterGenerator"},
    {mod: "Sequence",  name: "reverse"}
];

## Used in `MOD_NAMES` processing.
def REF_get = @varRef{name: "get"};


##
## Exported definitions
##

def REFS = cat(
    (Generator::filterAll(NAMES) { name <> {(name): @varRef{name}} })*,
    (Generator::filterAll(MOD_NAMES) { modName ->
        def mod = modName::mod;
        def name = modName::name;
        def modRef = @varRef{name: mod};
        def nameLit = @literal{value: name};
        def bindName = cat(mod, "_", name);
        <> {(bindName): @call{function: REF_get, actuals: [modRef, nameLit]}}
    })*
);

<> {REFS}
