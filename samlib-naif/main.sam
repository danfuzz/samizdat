## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Samizdat Core Library Secondary Loader
##
## This gets loaded from `boot.sam` and is responsible for returning
## the standard global variable environment.
##

def Globals      = moduleLoad(["core", "Globals"]);
def ModuleSystem = moduleLoad(["core", "ModuleSystem"]);

## Initializes the world, and returns the final global variable environment.
## `primitiveContext` and `libraryPath` are the same as what gets passed to
## the `boot` file.
fn init(primitiveContext, libraryPath) {
    def earlyGlobals = {
        primitiveContext*,
        Globals::earlyEnvironment()*
    };

    ## `null` isn't yet defined when this file is parsed. Hence, `@Null`.
    def loader = ModuleSystem::makeModuleLoader(
        [libraryPath*, "modules"],
        @Null,
        earlyGlobals);

    def innerGlobals = ModuleSystem::moduleLoad(loader, ["core", "Globals"]);
    <> innerGlobals::fullEnvironment()
};

<> {init}
