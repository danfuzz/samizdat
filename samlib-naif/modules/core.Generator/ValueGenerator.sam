## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `ValueGenerator` Class
##
## Payload is `{value}`, the value.

#= language core.Lang0

import ./unbounded :: unboundedCollect, unboundedFetch;


##
## Class Definition
##

## Secrets used to control access to this class.
def ACCESS = @ACCESS.toUnlisted();
def NEW = @NEW.toUnlisted();

class ValueGenerator
        access: ACCESS,
        new: NEW {
    ## Documented in spec.
    fn collect(optFilterFunction?) {
        ## It is an "unbounded collect" error to call this.
        unboundedCollect(this)
    };

    ## Documented in spec.
    fn fetch() {
        ## It is an "unbounded fetch" error to call this.
        unboundedFetch(this)
    };

    ## Documented in spec.
    fn nextValue(box) {
        def data = ACCESS(this);
        box* := data::value;
        return this
    };
};


##
## Exported Definitions
##

## Documented in spec.
export fn makeValueGenerator(value) {
    return NEW(ValueGenerator, @{value})
};
