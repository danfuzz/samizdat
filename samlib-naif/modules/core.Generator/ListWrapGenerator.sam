## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `ListWrapGenerator` Type
##
## Payload is `subGen`, the sub-generator.

#= language core.Lang0


##
## Exported Definitions
##

## Documented in spec.
export fn makeListWrapGenerator(generator) {
    return @ListWrapGenerator(generator)
};

## Documented in spec.
fn @@ListWrapGenerator.collect(optFilterFunction?) {
    ## Just use the standard implementation.
    return Generator_stdCollect(this, optFilterFunction*)
};

## Documented in spec.
fn @@ListWrapGenerator.fetch() {
    ## Just use the standard implementation.
    return Generator_stdFetch(this)
};

## Documented in spec.
fn @@ListWrapGenerator.nextValue(box) {
    def result;

    return? ifValue { nextValue(dataOf(this), var result) }
        { nextGenerator ->
            store(box, [result]);
            @ListWrapGenerator(nextGenerator)
        }
};
