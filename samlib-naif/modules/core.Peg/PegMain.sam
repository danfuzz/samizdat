## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `PegMain` class
##

#= language core.Lang0

import ./PegChoice :: makeChoice;
import ./PegSequence :: makeSequence;


##
## Class Definition
##
## Payload: {rule: rule}

## Secrets used to control access to this class.
def ACCESS = @ACCESS.toUnlisted();
def NEW = @NEW.toUnlisted();

class PegMain
        access: ACCESS,
        new: NEW {
    ## Documented in spec.
    .parse(box, input, .*) {
        ## The point of this implementation is to drop the `items` context.
        def data = this.(ACCESS)();
        return? data::rule.parse(box, input)
    };
};


##
## Exported Definitions
##

## Documented in spec.
export fn makeMainChoice(rules*) {
    return PegMain.(NEW)(@{rule: makeChoice(rules*)})
};

## Documented in spec.
export fn makeMainSequence(rules*) {
    return PegMain.(NEW)(@{rule: makeSequence(rules*)})
};
