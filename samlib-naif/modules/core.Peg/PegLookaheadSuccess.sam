## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `PegLookaheadSuccess` class
##

#= language core.Lang0


##
## Class Definition
##
## Payload: {rule: rule}

## Secret used to control access to this class. TODO: Should probably be an
## anonymous selector.
def SECRET = makeUniqlet();

## Class being defined here.
def PegLookaheadSuccess = makeObjectClass("PegLookaheadSuccess", SECRET);

## Documented in spec.
fn PegLookaheadSuccess.parse(box, input, items*) {
    def data = this.objectDataOf(SECRET);
    return? ifIs { data::rule.parse(box, input, items*) }
        { input }
};


##
## Exported Definitions
##

## Documented in spec.
export fn makeLookaheadSuccess(rule) {
    return makeObject(PegLookaheadSuccess, SECRET, {rule})
};
