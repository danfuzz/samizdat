## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Value functions
##


##
## Exported Definitions
##

## Documented in spec.
fn ge(v1, v2) {
    <> ifNot { <> totEq(order(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn gt(v1, v2) {
    <> ifIs { <> totEq(order(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn le(v1, v2) {
    <> ifNot { <> totEq(order(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn lt(v1, v2) {
    <> ifIs { <> totEq(order(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn ne(v1, v2) {
    <> ifNot { <> eq(v1, v2) }
        { <> v1 }
};

## Documented in spec.
fn perGe(v1, v2) {
    <> ifNot { <> totEq(perOrder(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn perGt(v1, v2) {
    <> ifIs { <> totEq(perOrder(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn perLe(v1, v2) {
    <> ifNot { <> totEq(perOrder(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn perLt(v1, v2) {
    <> ifIs { <> totEq(perOrder(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn perNe(v1, v2) {
    <> ifNot { <> perEq(v1, v2) }
        { <> v1 }
};

## Documented in spec.
fn totGe(v1, v2) {
    <> ifNot { <> totEq(totOrder(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn totGt(v1, v2) {
    <> ifIs { <> totEq(totOrder(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn totLe(v1, v2) {
    <> ifNot { <> totEq(totOrder(v1, v2), 1) }
        { <> v1 }
};

## Documented in spec.
fn totLt(v1, v2) {
    <> ifIs { <> totEq(totOrder(v1, v2), -1) }
        { <> v1 }
};

## Documented in spec.
fn totNe(v1, v2) {
    <> ifNot { <> totEq(v1, v2) }
        { <> v1 }
};

<> {
    ge,
    gt,
    le,
    lt,
    ne,
    perGe,
    perGt,
    perLe,
    perLt,
    perNe,
    totGe,
    totGt,
    totLe,
    totLt,
    totNe
}
