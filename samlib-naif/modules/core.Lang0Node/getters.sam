## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

def $Generator = moduleLoad(["core", "Generator"]);
def $Number    = moduleLoad(["proto", "Number"]);

def $formals = intraLoad("formals");
def formalsMaxArgs = $formals::formalsMaxArgs;
def formalsMinArgs = $formals::formalsMinArgs;


##
## Exported functions
##

## Documented in spec.
export fn get_actuals(node) {
    <> node::actuals
};

## Documented in spec.
export fn get_formals(node) {
    <> node::formals
};

## Documented in spec.
export fn get_function(node) {
    <> node::function
};

## Documented in spec.
export fn get_id(node) {
    <> node::id
};

## Documented in spec.
export fn get_interpolate(node) {
    <> node::interpolate
};

## Documented in spec.
export fn get_lvalue(node) {
    <> node::lvalue
};

## Documented in spec.
export fn get_maxArgs(node) {
    <> formalsMaxArgs(get_formals(node))
};

## Documented in spec.
export fn get_minArgs(node) {
    <> formalsMinArgs(get_formals(node))
};

## Documented in spec.
export fn get_name(node) {
    <> node::name
};

## Documented in spec.
export fn get_nodeValue(node) {
    <> node::value
};

## Documented in spec.
export fn get_statements(node) {
    <> node::statements
};

## Documented in spec.
export fn get_yield(node) {
    <> node::yield
};

## Documented in spec.
export fn get_yieldDef(node) {
    <> node::yieldDef
};
