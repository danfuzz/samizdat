## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## `MapGenerator` Type
##
## Payload is `{map: map, index: int}`.

#= language core.Lang0

import proto.Collection :: nthMapping;
import proto.Number :: add;


##
## Exported Definitions
##

## Documented in spec.
fn @@MapGenerator.collect(optFilterFunction?) {
    ## Just use the standard implementation.
    return Generator_stdCollect(this, optFilterFunction*)
};

## Documented in spec.
fn @@MapGenerator.fetch() {
    ## Just use the standard implementation.
    return Generator_stdFetch(this)
};

## Generator used when iterating over maps.
fn @@MapGenerator.nextValue(box) {
    def index = this::index;
    def map = this::map;

    return? ifValue { nthMapping(map, index) }
        { value ->
            store(box, value);
            @MapGenerator{index: add(index, 1), map}
        }
};
