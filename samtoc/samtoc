#!/bin/bash
#
# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>


#
# Directory and program name detection
#

# Preserve the original working dir as origDir.
origDir="${PWD}"

# Set progName to the program name, progDir to its directory, and baseDir
# to progDir's directory. Follows symlinks.
prog="$0"
while [[ -h ${prog} ]]; do
    [[ "$(/bin/ls -ld "${prog}")" =~ .*' -> '(.*)$ ]]
    newProg="${BASH_REMATCH[1]}"
    if [[ ${newProg} =~ ^/ ]]; then
        prog="${newProg}"
    else
        prog="$(dirname "${prog}")/${newProg}"
    fi
done
progName="$(basename "${prog}")"
progDir="$(dirname "${prog}")"
cd "${progDir}"
progDir="${PWD}"
cd ..
baseDir="${PWD}"
cd "${origDir}"
unset prog
unset newProg


#
# Argument parsing
#

# Output file name.
outputFile=''

# Whether to compile to binary.
fullCompile='yes'

# Additional arguments passed to the program.
moreArgs=()

while [[ $1 != '' ]]; do
    opt="$1"
    if [[ ${opt} == '--' ]]; then
        shift
        break
    elif [[ ${opt} == '--help' ]]; then
        echo "${progName} [--output=<path>] [--c-code] [--mode=<mode>]"
        echo "    <source-path>"
        exit
    elif [[ ${opt} == '--c-code' ]]; then
        fullCompile='no'
    elif [[ ${opt} =~ ^--mode=(.*) ]]; then
        moreArgs+=("${opt}")
    elif [[ ${opt} =~ ^--output=(.*) ]]; then
        outputFile="${BASH_REMATCH[1]}"
    elif [[ ${opt} =~ ^- ]]; then
        echo "Unknown option: ${opt}" 1>&2
        exit 1
    else
        break
    fi
    shift
done
unset opt

if (( $# == 0 )); then
    echo 'Missing source file name.' 1>&2
    exit 1
elif (( $# > 1 )); then
    # Multiple source files.
    fullCompile='no'
    if [[ ${outputFile} != '' ]]; then
        echo 'Cannot specify --output with multiple sources.' 1>&2
        exit 1
    fi
else
    # Single source file.
    if [[ ${outputFile} == '' && ${fullCompile} == 'yes' ]]; then
        outputFile="$1.c"
    fi
fi

if [[ ${outputFile} == '-' || ${outputFile} == '/dev/stdout' ]]; then
    outputFile='/dev/stdout'
    fullCompile='no'
fi


#
# Main script
#

if [[ ${outputFile} != '' ]]; then
    moreArgs+=("--output=${outputFile}")
fi

"${baseDir}/samizdat-0/samizdat" "${progDir}" \
    "${moreArgs[@]}" -- "$@" \
|| exit 1

if [[ ${fullCompile} == no ]]; then
    exit
fi

CC=cc

# Note: The GNU equivalent to `-dynamiclib` seems to be `-shared`, and
# the equivalent to `-undefined dynamic_lookup` seems to be `-Ur`.
COMPILE_LIB=(
    "${CC[@]}"
        -dynamiclib -undefined dynamic_lookup
        -I"${baseDir}/../samizdat-0/include"
)

"${COMPILE_LIB[@]}" -o "${outputFile}" "${generatedFile}"
