/*
 * GENERATED CODE!
 * GENERATED CODE!
 * GENERATED CODE!
 *
 * This code *might* be derived from a copyrighted source. Proceed with
 * caution!
 */

#include "type/OneOff.h"
#include "type/String.h"
#include "util.h"

static zvalue lookup(zvalue env, const char *name) {
    zvalue result = get(env, stringFromUtf8(-1, name));

    if (result == NULL) {
        die("Binding missing: %s", name);
    }

    return result;
}

static zvalue externalSource(const char *name) {
    zvalue type = makeDerivedDataType(stringFromUtf8(-1, "external"));
    zvalue data = stringFromUtf8(-1, name);
    return makeValue(type, data, NULL);
}

zvalue eval(zvalue env) {
    zvalue loadModule = lookup(env, "loadModule");
    zvalue codeModule = FUN_CALL(loadModule, externalSource("core.Code"));
    zvalue evalFn = lookup(codeModule, "eval");
    zvalue langModule = FUN_CALL(loadModule, externalSource("core.Lang2"));
    zvalue parseProgramFn = lookup(langModule, "parseProgram");

    zvalue progStr = stringFromUtf8(-1,
        \%q(source)
    );

    zvalue progTree = FUN_CALL(parseProgramFn, progStr);
    zvalue evalResult = FUN_CALL(evalFn, env, progTree);

    return evalResult;
}
