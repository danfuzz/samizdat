## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

import core.Lang0Node;
def get_name          = $Lang0Node::get_name;
def makeDynamicImport = $Lang0Node::makeDynamicImport;

## `node.get_varDefs()`: Generic that returns list of variable names
## newly-defined by `node`. Result may have duplicates.
export fn .get_varDefs();

## Extracts and combines the `varDefs` of all the arguments.
fn catVarDefs(nodes*) {
    <> [].cat(( n in nodes <> n.varDefs )*)
};

fn @@apply.get_varDefs() {
    <> []
};

fn @@call.get_varDefs() {
    <> []
};

fn @@closure.get_varDefs() {
    <> []
};

fn @@importModule.get_varDefs() {
    <> [this.name]
};

fn @@importModuleSelection.get_varDefs() {
    def statements = makeDynamicImport(this);
    <> catVarDefs(statements*)
};

fn @@importResource.get_varDefs() {
    <> [this.name]
};

fn @@jump.get_varDefs() {
    <> []
};

fn @@literal.get_varDefs() {
    <> []
};

fn @@literalRef.get_varDefs() {
    <> []
};

fn @@varBind.get_varDefs() {
    <> []
};

fn @@varDef.get_varDefs() {
    <> [this.name]
};

fn @@varDefMutable.get_varDefs() {
    <> [this.name]
};

fn @@varRef.get_varDefs() {
    <> []
};
