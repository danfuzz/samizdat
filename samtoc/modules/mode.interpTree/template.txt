/*
 * GENERATED CODE!
 * GENERATED CODE!
 * GENERATED CODE!
 *
 * This code *might* be derived from a copyrighted source. Proceed with
 * caution!
 */

#include "type/Int.h"
#include "type/List.h"
#include "type/Map.h"
#include "type/String.h"
#include "type/Type.h"
#include "type/Value.h"
#include "util.h"

static zvalue programTree(void) {
  return
\(source);
}

static zvalue lookup(zvalue context, const char *name) {
    return get(context, stringFromUtf8(-1, name));
}

zvalue eval(zvalue context) {
    zvalue evalFn = lookup(context, "Lang0_eval");

    if (evalFn == NULL) {
        zvalue moduleLoad = lookup(context, "moduleLoad");
        if (moduleLoad == NULL) {
            die("Binding missing: moduleLoad or Lang0_eval");
        }

        zvalue langModule = FUN_CALL(
            moduleLoad,
            listFromArgs(
                stringFromUtf8(-1, "core"),
                stringFromUtf8(-1, "Lang0"),
                NULL));

        evalFn = lookup(langModule, "eval");
        if (evalFn == NULL) {
            die("Binding missing: core.Lang0::eval");
        }
    }

    return FUN_CALL(evalFn, context, programTree());
}
