## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Function call tree.
##

import ./indentation :: *;
import ./protocol :: *;


##
## Exported Definitions
##

export fn genCall(function, args*) {
    def flat = "\[
        function.flatten(),
        "(",
        ( a in args, i in (#args.. by -1) ->
            [a.flatten(), (i == 1) & "" | ", "]
        )*,
        ")"
    ]";

    var flatOk = false;
    if ((#args < 5) & prefersFlat(function)) {
        flatOk := true;
        for (a in args) {
            if (!prefersFlat(a)) {
                flatOk := false;
                break
            }
        }
    };

    return @Call{function, args, flat, flatOk}
};

fn @@Call.flatten() {
    return this::flat
};

fn @@Call.indent(level, maxColumns) {
    def prefix = indentation(level);

    if ((#this::flat + #prefix) <= maxColumns) {
        return "\[prefix, this::flat]"
    };

    def args = this::args;
    def nextLevel = level + 1;

    return "\[
        prefix, this::function.flatten(), "(\n",
        ( a in args, i in (#args.. by -1) ->
            [
                a.indent(nextLevel, maxColumns),
                (i == 1) & ")" | ",\n"
            ]
        )*
    ]"
};

fn @@Call.prefersFlat() {
    return? this::flatOk** & this;
};
