## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Comment tree.
##

import ./Wrapper :: *;
import ./indentation :: *;
import ./protocol :: *;


##
## Class Definition
##

## Secret used to control access to this class. TODO: Should probably be an
## anonymous selector.
def SECRET = makeUniqlet();

## Class being defined here.
def Comment = makeObjectClass("Comment", SECRET);

fn Comment.flatten() {
    def data = objectDataOf(this, SECRET);
    def text = data::text;

    return (def payload = data::payload)
        & "/* \(text) */ \(payload.flatten())"
        | "/* \(text) */"
};

fn Comment.indent(level, maxColumns) {
    def data = objectDataOf(this, SECRET);
    def prefix = indentation(level);

    return if (def p = data::payload) {
        cat(
            prefix, "// ", data::text, "\n",
            p.indent(level, maxColumns)
        )
    } else {
        "\(prefix)/* \(data::text) */"
    }
};

fn Comment.prefersFlat() {
    def data = objectDataOf(this, SECRET);
    return? (#data::text < 30)
        & (((def payload = data::payload)
            & payload.prefersFlat()?
            | true?)*)
        & this
};


##
## Exported Definitions
##

export fn genComment(text, optPayload?) {
    return if (def payload = optPayload*) {
        genWrapper(makeObject(Comment, SECRET, {payload, text}))
    } else {
        genWrapper(makeObject(Comment, SECRET, {text}))
    }
};
