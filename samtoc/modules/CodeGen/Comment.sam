## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Comment tree.
##

import ./CodeString :: fix;
import ./Wrapper :: *;
import ./indentation :: *;


##
## Class Definition
##

## Secrets used to control access to this class.
def ACCESS = @ACCESS.toUnlisted();
def NEW = @NEW.toUnlisted();

export class Comment
        access: ACCESS,
        new: NEW {
    .flatten() {
        def data = this.(ACCESS)();
        def text = data::text;

        return (def payload = data::payload)
            & "/* \(text) */ \(payload.flatten())"
            | "/* \(text) */"
    };

    .indent(level, maxColumns) {
        def data = this.(ACCESS)();
        def prefix = indentation(level);

        return if (def p = data::payload) {
            "".cat(
                prefix, "// ", data::text, "\n",
                p.indent(level, maxColumns)
            )
        } else {
            "\(prefix)/* \(data::text) */"
        }
    };

    .prefersFlat() {
        def data = this.(ACCESS)();
        return? (#data::text < 30)
            & (((def payload = data::payload)
                & payload.prefersFlat()?
                | true?)*)
            & this
    };
};

##
## Exported Definitions
##

export fn genComment(text, optPayload?) {
    return if (def payload = optPayload*) {
        Wrapper.new(Comment.(NEW)(@{payload: fix(payload), text}))
    } else {
        Wrapper.new(Comment.(NEW)(@{text}))
    }
};
