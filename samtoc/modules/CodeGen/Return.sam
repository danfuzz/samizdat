## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Return tree.
##

import ./CodeString :: fix;
import ./Wrapper :: *;
import ./indentation :: *;


##
## Class Definition
##

## Secret used to control access to this class.
def SECRET = @secret.toUnlisted();

class Return
        access: SECRET {
    fn flatten() {
        def data = SECRET(this);
        return "return \(data::tree.flatten())"
    };

    fn indent(level, maxColumns) {
        def data = SECRET(this);
        def prefix = indentation(level);

        return "\
            \(prefix)return
            \(data::tree.indent(level + 1, maxColumns))"
    };

    fn prefersFlat() {
        def data = SECRET(this);
        return? data::tree.prefersFlat()
            & this
    };
};


##
## Exported Definitions
##

export fn genReturn(tree) {
    return genWrapper(makeObject(Return, SECRET, @{tree: fix(tree)}))
};
