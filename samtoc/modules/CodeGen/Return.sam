## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Return tree.
##

def indentation = intraLoad(["indentation"])::indentation;
def protocol = intraLoad(["protocol"]);

def flatten = protocol::flatten;
def indent = protocol::indent;

fn makeReturn(tree) {
    <> @Return{tree, flat: "return \(tree.flatten())"}
};

genericBind(
    flatten,
    @@Return,
    fn Return_flatten(tree) {
        <> dataOf(tree)::flat
    });

genericBind(
    indent,
    @@Return,
    fn Return_indent(tree, level, maxColumns) {
        def data = dataOf(tree);
        def prefix = indentation(level);

        <> if ((#data::flat + #prefix) <= maxColumns) {
            <> "\(prefix)\(data::flat)"
        } else {
            <> "\
            \(prefix)return
            \(data::tree.indent(level + 1, maxColumns))"
        }
    });

<> {makeReturn}
