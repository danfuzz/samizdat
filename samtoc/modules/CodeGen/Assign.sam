## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Variable assignment tree.
##

import ./CodeString :: fix;
import ./Wrapper :: *;
import ./indentation :: *;


##
## Class Definition
##

## Secret used to control access to this class.
def SECRET = @secret.toUnlisted();

class Assign
        access: SECRET {
    fn flatten() {
        def data = SECRET(this);
        return "\(data::target.flatten()) = \(data::value.flatten())"
    };

    fn indent(level, maxColumns) {
        def data = SECRET(this);
        return "".cat(
            data::target.indent(level, maxColumns),
            " =\n",
            data::value.indent(level + 1, maxColumns)
        )
    };

    fn prefersFlat() {
        def data = SECRET(this);
        return? data::target.prefersFlat()
            & data::value.prefersFlat()
            & this
    };
};


##
## Exported Definitions
##

export fn genAssign(target, value) {
    return genWrapper(
        SECRET(Assign, @{target: fix(target), value: fix(value)}))
};
