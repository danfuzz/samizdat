## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Protocol bindings for class String.
##

import ./indentation :: *;


##
## Class Definition
##

## Secrets used to control access to this class.
def ACCESS = @ACCESS.toUnlisted();
def NEW = @NEW.toUnlisted();

export class CodeString
        access: ACCESS,
        new: NEW {
    class.new(text) {
        return this.(NEW)(@{text});
    };

    ## Fixes a tree constructor argument, so that strings (per se) are
    ## transformed into `CodeString`s.
    class.fix(treeOrString) {
        return String.accepts(treeOrString)
            & this.new(treeOrString)
            | treeOrString
    };

    .flatten() {
        def data = this.(ACCESS)();
        return data::text
    };

    .indent(level, maxColumns) {
        def data = this.(ACCESS)();
        return INDENTATION[level].cat(data::text)
    };

    .prefersFlat() {
        return this
    };
};
