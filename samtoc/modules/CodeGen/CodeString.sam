## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Protocol bindings for class String.
##

import ./indentation :: *;


##
## Class Definition
##

## Secret used to control access to this class.
def SECRET = @secret.toUnlisted();

class CodeString
        access: SECRET {
    fn flatten() {
        def data = SECRET(this);
        return data::text
    };

    fn indent(level, maxColumns) {
        def data = SECRET(this);
        return indentation(level).cat(data::text)
    };

    fn prefersFlat() {
        return this
    };
};


##
## Exported Definitions
##

export fn genCodeString(text) {
    return makeObject(CodeString, SECRET, @{text});
};

## Fixes a tree constructor argument, so that strings (per se) are
## transformed into `CodeString`s.
export fn fix(treeOrString) {
    return hasClass(treeOrString, String)
        & genCodeString(treeOrString)
        | treeOrString
};
