## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Statement tree.
##

import ./CodeString :: fix;
import ./Wrapper :: *;
import ./indentation :: *;


##
## Class Definition
##

## Secret used to control access to this class.
def SECRET = @secret.toUnlisted();

## Class being defined here.
def Statement = makeObjectClass(@Statement, SECRET);

fn Statement.flatten() {
    def data = SECRET(this);
    return "\(data::tree.flatten());"
};

fn Statement.indent(level, maxColumns) {
    def data = SECRET(this);
    return "\(data::tree.indent(level, maxColumns));\n"
};

fn Statement.prefersFlat() {
    def data = SECRET(this);
    return? data::tree.prefersFlat()
        & this
};


##
## Exported Definitions
##

export fn genStatement(tree) {
    return genWrapper(makeObject(Statement, SECRET, @{tree: fix(tree)}))
};
