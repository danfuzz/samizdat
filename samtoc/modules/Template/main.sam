## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Simple template substitution facility
##

def parSubstitution = {:
    format = (
        "%"
        chars = [! "("]+
        { <> $Peg::stringFromTokenList(chars) }
    |
        { <> "s" }
    )

    "("
    name = [! ")"]+
    ")"

    {
        <> {format, name: $Peg::stringFromTokenList(name)}
    }
:};

def parItem = {:
    "\\"
    (
        parSubstitution
    |
        "\\"
        { <> "\\" }
    |
        ch = .
        { die("Invalid escape sequence: \%q["\\", get_typeName(ch)]") }
    )
|
    chars = [! "\\"]+
    { <> $Peg::stringFromTokenList(chars) }
:};

def parTemplate = {:
    parItem*
:};

export fn apply(templateString, defs) {
    def items = $Peg::apply(parTemplate, templateString);

    def texts = [ item in items ->
        <> hasType(item, String) |
            $Format::formatterFor(item::format)(
                defs[item::name] | "<MISSING \%q(item::name)>")
    ];

    <> "\[texts*]"
};
