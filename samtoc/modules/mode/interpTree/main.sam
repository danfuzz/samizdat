## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Compilation mode "interp-tree" which converts the source into a parse tree,
## and emits C code to recreate same. When run, this uses the underlying
## interpreter (hence the name's prefix).
##

def templateText = intraRead(["template.txt"]);

def CodeGen = moduleLoad(["CodeGen"]);
def DataCode = moduleLoad(["DataCode"]);
def Template = moduleLoad(["Template"]);

def Io1 = moduleLoad(["core", "Io1"]);
def Lang2 = moduleLoad(["core", "Lang2"]);

fn compile(sourcePath, targetPath) {
    def sourceText = Io1::readFileUtf8(sourcePath);
    def tree = Lang2::convertToLang0(Lang2::parseProgram(sourceText));
    def source = CodeGen::indent(DataCode::convert(tree), 2, 78);
    def outputText = Template::apply(templateText, {source});

    Io1::writeFileUtf8(targetPath, outputText)
};

<> {compile}
