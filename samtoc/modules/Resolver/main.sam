## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Module file resolver
##
## This defines two classes that mirror the equivalents in the module system,
## one which does "internal" resolution and one which does "external"
## resolution.
##

export import ./NullResolver :: nullResolver;
export import ./external :: makeExternalResolver;
export import ./internal :: makeInternalResolver;
export import ./protocol :: resolve;


##
## Private Definitions
##

## Helper for `splitPaths` which does the actual splitting.
def parPathList = {:
    (
        &.
        chars = [! ":"]*
        (":" | !.)

        { $Peg::stringFromTokenList(chars) }
    )*
:};

## Parses a colon-separated string into a list.
fn splitPaths(paths) {
    return $Peg::apply(parPathList, paths)
};


##
## Exported Definitions
##

## Makes a chain of external resolvers corresponding to the given `paths`
## string. `paths` must be a colon-separated list of `modules`-style
## directories.
export fn makeResolverChain(paths, next) {
    def pathList = splitPaths(paths);
    var result = next;

    for (one in pathList) {
        result := makeExternalResolver(one, result)
    };

    return result
};
