## Copyright 2013-2014 the Samizdat Authors (Dan Bornstein et alia).
## Licensed AS IS and WITHOUT WARRANTY under the Apache License,
## Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

##
## Class definition: `null` as a Resolver
##


##
## Class definition
##

## Secret used to control access to this class. TODO: Should probably be an
## anonymous selector.
def SECRET = makeUniqlet();

## Class being defined here.
def NullResolver = makeObjectClass(@.NullResolver, SECRET);

fn NullResolver.resolve(source) {
    ## Return `void`, that is, fail to resolve. If we hit this point, then
    ## there is probably something actually wrong (e.g. insufficient entries
    ## on the `externals` link path), and it will probably end up percolating
    ## back up as an error.
    return
};


##
## Exported Definitions
##

export def nullResolver = makeObject(NullResolver, SECRET);
