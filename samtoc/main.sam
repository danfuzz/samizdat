# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

def Io1 = moduleUse({name: ["core", "Io1"]});

def boilerplateFile = submoduleRead("boilerplate.txt");

fn applyBoilerplate(replacement) {
    def parBoilerplateChar = {/
        "REPLACE-THIS"
        { <> "\%q(replacement)" }
    |
        ch = .
        { <> typeOf(ch) }
    /};

    def parBoilerplate = {/
        parBoilerplateChar*
    /};

    def chars = Peg::apply(parBoilerplate, boilerplateFile);
    <> cat(chars*)
};

fn main(selfPath, args*) {
    Io1::note("\
        Starting: \%q(selfPath)
        Args:     \%q(args)\n");

    def sourceFile = args[0];
    def targetFile = args[1];

    Io1::note("\
        Source: \%q(sourceFile)
        Target: \%q(targetFile)\n");

    def sourcePath = Io1::pathFromFlat(sourceFile);
    def targetPath = Io1::pathFromFlat(targetFile);
    def sourceText = Io1::readFileUtf8(sourcePath);

    # TODO!
    def outputText = applyBoilerplate(sourceText);
    Io1::writeFileUtf8(targetPath, outputText)
};

<> {main: main}
