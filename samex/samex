#!/bin/bash
#
# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>


#
# Directory and program name detection
#

# Preserve the original working dir as origDir.
origDir="${PWD}"

# Set progName to the program name, progDir to its directory, and baseDir
# to progDir's directory. Follows symlinks.
prog="$0"
while [[ -h ${prog} ]]; do
    [[ "$(/bin/ls -ld "${prog}")" =~ .*' -> '(.*)$ ]]
    newProg="${BASH_REMATCH[1]}"
    if [[ ${newProg} =~ ^/ ]]; then
        prog="${newProg}"
    else
        prog="$(dirname "${prog}")/${newProg}"
    fi
done
progName="$(basename "${prog}")"
progDir="$(dirname "${prog}")"
cd "${progDir}"
progDir="${PWD}"
cd ..
baseDir="${PWD}"
cd "${origDir}"
unset prog
unset newProg


#
# Argument parsing
#

# Preferred runtime name option.
runtimeOpt=()

# Whether to time the run.
timeRun='no'

# Whether to profile the run.
profileRun='no'

while [[ $1 != '' ]]; do
    opt="$1"
    if [[ ${opt} == '--' ]]; then
        shift
        break
    elif [[ ${opt} == '--help' ]]; then
        echo "${progName} [--runtime=<name>] [--time | --profile]"
        exit
    elif [[ ${opt} == '--profile' ]]; then
        profileRun='yes'
        timeRun='no'
    elif [[ ${opt} =~ ^--runtime=(.*) ]]; then
        runtimeOpt=("${opt}")
    elif [[ ${opt} == '--time' ]]; then
        timeRun='yes'
        profileRun='no'
    elif [[ ${opt} =~ ^- ]]; then
        echo "Unknown option: ${opt}" 1>&2
        exit 1
    else
        break
    fi
    shift
done
unset opt


#
# Main script
#

name="$("${progDir}/find-samex" "${runtimeOpt[@]}" --bin)"
if [[ $? != 0 ]]; then
    exit 1
fi

cmd=("${name}" "$@")

if [[ ${timeRun} == 'yes' ]]; then
    time -p "${cmd[@]}"
elif [[ ${profileRun} == 'yes' ]]; then
    # May also want to use the -allocations option.
    iprofiler -T 20s -timeprofiler "${cmd[@]}"
else
    exec "${cmd[@]}"
fi
