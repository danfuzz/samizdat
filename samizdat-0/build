#!/bin/bash
#
# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>


#
# Directory and program name detection
#

# Preserve the original working dir as origDir.
origDir="${PWD}"

# Set progName to the program name, progDir to its directory, and baseDir
# to progDir's directory. Follows symlinks.
prog="$0"
while [[ -h ${prog} ]]; do
    [[ "$(/bin/ls -ld "${prog}")" =~ .*' -> '(.*)$ ]]
    newProg="${BASH_REMATCH[1]}"
    if [[ ${newProg} =~ ^/ ]]; then
        prog="${newProg}"
    else
        prog="$(dirname "${prog}")/${newProg}"
    fi
done
progName="$(basename "${prog}")"
progDir="$(dirname "${prog}")"
cd "${progDir}"
progDir="${PWD}"
cd ..
baseDir="${PWD}"
cd "${origDir}"
unset prog
unset newProg


#
# Main script
#

projectName="$(basename "${progDir}")"

OUT="${OUT:-${baseDir}/out}/${projectName}"
rm -rf "${OUT}" || exit 1
mkdir -p "${OUT}" || exit 1

COMPILE_C=(cc -g -c -I"${progDir}")
LINK_BIN=(cc -g)

cd "${progDir}"

C_SOURCES=($(find . -name '*.c'))
LIB_SOURCES=($(find ../samizdat-0-lib -name '*.sam0'))

for file in "${LIB_SOURCES[@]}"; do
    inDir="$(dirname "${file}")"
    inFile="$(basename "${file}")"
    outFile="${OUT}/${inFile%.sam0}.c"
    # `xxd` names its output after the full input path, hence the `cd`.
    (cd "${inDir}"; xxd -i "${inFile}" > "${outFile}") || exit 1
    C_SOURCES+=("${outFile}")
done

errors=0
for file in "${C_SOURCES[@]}"; do
    if [[ ${file} =~ ^\./(.*)/([^/]*)\.c$ ]]; then
        # It's a normal source file.
        dir="${BASH_REMATCH[1]}"
        baseName="${BASH_REMATCH[2]}"
        outDir="${OUT}/${dir}"
        infoName="${file}"
    else
        # It's a generated source file.
        [[ ${file} =~ ^"${OUT}"/(.*)\.c$ ]] || exit 1
        baseName="${BASH_REMATCH[1]}"
        infoName="${baseName}"
        outDir="${OUT}"
        infoName="${baseName}.c"
    fi

    outFile="${outDir}/${baseName}.o"
    mkdir -p "${outDir}"
    echo "Compile: ${infoName}"
    "${COMPILE_C[@]}" -o "${outFile}" "${file}" || (( errors++ ))
done

if (( errors != 0 )); then
    printf '%d error(s)\n' "${errors}"
    exit 1
fi

cd "${OUT}"
OBJECTS=($(find . -name '*.o'))
"${LINK_BIN[@]}" -o "${projectName}" "${OBJECTS[@]}" || exit 1
