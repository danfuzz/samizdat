#!/bin/bash
#
# Copyright 2013 the Samizdat Authors (Dan Bornstein et alia).
# Licensed AS IS and WITHOUT WARRANTY under the Apache License,
# Version 2.0. Details: <http://www.apache.org/licenses/LICENSE-2.0>

#
# Generate some quick overall stats about the code.
#

#
# Directory and program name detection
#

# Preserve the original working dir as origDir.
origDir="${PWD}"

# Set progName to the program name, progDir to its directory, and baseDir
# to progDir's directory. Follows symlinks.
prog="$0"
while [[ -h ${prog} ]]; do
    [[ "$(/bin/ls -ld "${prog}")" =~ .*' -> '(.*)$ ]]
    newProg="${BASH_REMATCH[1]}"
    if [[ ${newProg} =~ ^/ ]]; then
        prog="${newProg}"
    else
        prog="$(dirname "${prog}")/${newProg}"
    fi
done
progName="$(basename "${prog}")"
progDir="$(dirname "${prog}")"
cd "${progDir}"
progDir="${PWD}"
cd ..
baseDir="${PWD}"
cd "${origDir}"
unset prog
unset newProg


#
# Helper functions
#

# Reports a line count of all files in the repo that match the given
# name (a glob pattern).
function getCount {
    local glob="$1"
    local dir="$2"

    if [[ ${dir} == '' ]]; then
        dir='.'
    fi

    wc -l $(find "${dir}" -name "$glob") |
    awk '
    { count = $1; }
    END { print count; }'
}


#
# Main script
#

cd "${baseDir}"

cHeader="$(getCount '*.h')"
cCode="$(getCount '*.c')"
(( cTotal = cHeader + cCode ))

sam0Code="$(getCount '*.sam0' samizdat-0-lib)"
sam1Code="$(getCount '*.sam0' samizdat-1)"
demoCode="$(getCount '*.sam0' demo)"
(( samTotal = sam0Code + sam1Code + demoCode ))

(( total = cTotal + samTotal ))

(( per10k = samTotal * 10000 / total ))
(( samPercent = per10k / 100 ))
(( samPercentFrac = per10k % 100 ))

printf '\n'

printf 'C Code\n'
printf -- '----------------------\n'
printf '  Header     %5d\n' "${cHeader}"
printf '  Code       %5d\n' "${cCode}"
printf '  Total      %5d\n' "${cTotal}"
printf '\n'

printf 'Samizdat Code\n'
printf -- '----------------------\n'
printf '  Library    %5d\n' "${sam0Code}"
printf '  Samizdat-1 %5d\n' "${sam1Code}"
printf '  Demo       %5d\n' "${demoCode}"
printf '  Total      %5d\n' "${samTotal}"
printf '\n'

printf 'Summary\n'
printf -- '----------------------\n'
printf '  Total      %5d\n' "${total}"
printf '  Sam bulk      %2d.%02d%%\n' "${samPercent}" "${samPercentFrac}"
printf '\n'
